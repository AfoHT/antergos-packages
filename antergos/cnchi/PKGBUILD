# Maintainer: Antergos Developers <dev@antergos.com>

pkgname=cnchi
_pkgname=Cnchi
pkgver=0.14.426
pkgrel=5
pkgdesc='A modern, flexible system installer for Linux'
arch=('any')
license=('GPL3')
url='https://github.com/Antergos/Cnchi'
depends=('iso-codes' 'geoip2-database' 'gptfdisk' 'python' 'pyalpm'
         'python-bugsnag' 'python-cairo' 'python-dbus' 'python-geoip2'
         'python-gobject' 'python-mako' 'python-maxminddb' 'python-parted'
         'python-requests' 'upower' 'webkit2gtk')
makedepends=('transifex-client')
conflicts=('cnchi-dev')
source=("${_pkgname}-${pkgver}.zip::https://github.com/antergos/cnchi/archive/${pkgver}.zip")
md5sums=('96f959b8e078517786aa952702a5f7bb')

# BEGIN ANTBS METADATA
_is_monitored='True'
_monitored_service='github'
_monitored_type='releases'
_monitored_project='antergos'
_monitored_repo='cnchi'
# END ANTBS METADATA

build() {
    cd "${srcdir}/${_pkgname}-${pkgver}"

    # Grab latest translations from Transifex
    # tx pull
}


package() {
    cd "${srcdir}/${_pkgname}-${pkgver}"

    install -d ${pkgdir}/usr/share/{cnchi,locale}
    install -Dm755 "bin/${pkgname}" "${pkgdir}/usr/bin/cnchi"
    install -Dm755 "${pkgname}.desktop" "${pkgdir}/usr/share/applications/cnchi.desktop"
    install -Dm644 data/images/antergos/antergos-icon.png "${pkgdir}/usr/share/pixmaps/cnchi.png"

    # TODO: This should be included in Cnchi's src code as a separate file
    # (as both files are needed to run cnchi)
    sed -r -i 's|\/usr.+ -v|pkexec /usr/share/cnchi/bin/cnchi -s bugsnag|g' "${pkgdir}/usr/bin/cnchi"

    for i in src bin data scripts ui; do
        cp -R ${i} "${pkgdir}/usr/share/cnchi/"
    done

    for files in po/*; do
        if [ -f "$files" ] && [ "$files" != 'po/cnchi.pot' ]; then
            STRING_PO=`echo ${files#*/}`
            STRING=`echo ${STRING_PO%.po}`
            mkdir -p ${pkgdir}/usr/share/locale/${STRING}/LC_MESSAGES
            msgfmt $files -o ${pkgdir}/usr/share/locale/${STRING}/LC_MESSAGES/cnchi.mo
            echo "${STRING} installed..."
        fi
    done
}
