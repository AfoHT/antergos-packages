# Maintainer: Antergos Developers <dev@antergos.com>
# Contributor: BlackIkeEagle <ike DOT devolder AT gmail DOT com>
# Contributor: TZ86

pkgname=vivaldi
pkgver=1.10.867.42
# https://update.vivaldi.com/update/1.0/relnotes/1.10.867.42.html
_chromium=59.0.3071.104 # https://omahaproxy.appspot.com
pkgrel=1
pkgdesc='An advanced browser made with the power user in mind.'
groups=('browser')
url="https://vivaldi.com"
options=('!strip' '!zipman')
license=('custom' 'LGPL2.1')
arch=('x86_64')
depends=('gtk3' 'nss' 'libxtst' 'gconf' 'libxss' 'freetype2' 'ttf-font' 'nspr'
		'desktop-file-utils' 'shared-mime-info' 'alsa-lib' 'hicolor-icon-theme')
makedepends=('w3m' 'libexif' 'libpulse' 'libxss' 'ninja' 'pciutils' 'python2' 'xdg-utils' 'nodejs')
provides=('vivaldi-ffmpeg-codecs' 'vivaldi-widevine')
conflicts=('vivaldi-ffmpeg-codecs' 'vivaldi-widevine')
replaces=('vivaldi-ffmpeg-codecs' 'vivaldi-widevine')
noextract=('chrome.rpm')
_archgit_url='https://git.archlinux.org/svntogit/packages.git/plain/trunk'
_clientnative_patch='0001-ClientNativePixmapFactoryDmabuf-uses-ioctl-instead-o.patch'
_kernelversion_patch='0001-Fix-kernel-version-condition-for-including-dma-buf.h.patch'
source=(
	"https://downloads.vivaldi.com/stable/vivaldi-stable-${pkgver}-1.x86_64.rpm"
	"https://commondatastorage.googleapis.com/chromium-browser-official/chromium-$_chromium.tar.xz"
	"chrome.rpm::https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm"
	'chrome-eula_text.html::https://www.google.com/intl/en/chrome/browser/privacy/eula_text.html'
	"${_clientnative_patch}::${_archgit_url}/${_clientnative_patch}?h=packages/chromium"
	"${_kernelversion_patch}::${_archgit_url}/${_kernelversion_patch}?h=packages/chromium"
	"chromium-blink-gcc7.patch::${_archgit_url}/chromium-blink-gcc7.patch?h=packages/chromium"
	"chromium-v8-gcc7.patch::${_archgit_url}/chromium-v8-gcc7.patch?h=packages/chromium"
)
md5sums=('009ac220970e7461ff5acf61ef84acdd'
         '4a315c89d6fc567b5982316767a8faef'
         'ee059bdb6389da97cc810d763b21a0da'
         'd50d8f0a6940791eabc41c4f64e6a3cf'
         '7ad48853453a431b689c1ff97378840a'
         'de9345fb5cd756ed43c4ea7b9223e5ee'
         '034bc28a6988f3d6d1e7f291ec95365c'
         'c2f283eee77d4123a0952d9ee277ec3c')


prepare() {
	cd "$srcdir/chromium-$_chromium"

	# https://bugs.chromium.org/p/chromium/issues/detail?id=707604
	patch -Np1 -i ../../'0001-ClientNativePixmapFactoryDmabuf-uses-ioctl-instead-o.patch'
	patch -Np1 -i ../../'0001-Fix-kernel-version-condition-for-including-dma-buf.h.patch'

	# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=853347
	patch -Np1 -i ../../chromium-blink-gcc7.patch

	# https://bugs.chromium.org/p/chromium/issues/detail?id=614289
	patch -Np1 -i ../../chromium-v8-gcc7.patch

	# Use Python 2
	find . -name '*.py' -exec sed -i -r 's|/usr/bin/python$|&2|g' {} +

	# There are still a lot of relative calls which need a workaround
	[[ -d "$srcdir/python2-path" ]] && rm -rf "$srcdir/python2-path"
	mkdir "$srcdir/python2-path"
	ln -s /usr/bin/python2 "$srcdir/python2-path/python"

	mkdir -p third_party/node/linux/node-linux-x64/bin
	ln -s /usr/bin/node third_party/node/linux/node-linux-x64/bin/
}

build() {
	cd "$srcdir/chromium-$_chromium"

	export PATH="$srcdir/python2-path:$PATH"
	export HOME="$srcdir"
	export TMPDIR="$srcdir/temp"
	mkdir -p "$TMPDIR"

	local args=('ffmpeg_branding="Chrome"'
				'proprietary_codecs=true'
				'enable_hevc_demuxing=true'
				'use_gconf=false'
				'use_gio=false'
				'use_gnome_keyring=false'
				'use_kerberos=false'
				'use_cups=false'
				'use_sysroot=false'
				'use_gold=false'
				'linux_use_bundled_binutils=false'
				'use_gtk3=true'
				'fatal_linker_warnings=false'
				'treat_warnings_as_errors=false'
				'is_clang=false'
				'is_component_build=true'
				'is_debug=false'
				'symbol_level=0'
				'enable_nacl=false'
				'enable_swiftshader=false')

	python2 tools/gn/bootstrap/bootstrap.py -v --gn-gen-args "${args[*]}"
	out/Release/gn gen out/Release -v --args="${args[*]}" --script-executable=/usr/bin/python2

	ninja -C out/Release -v media/ffmpeg
}


package() {
	cp -a {opt,usr} "${pkgdir}"

	# suid sanbox
	chmod 4755 "${pkgdir}/opt/vivaldi/vivaldi-sandbox"

	# make /usr/bin/vivaldi available if its not there
	if [[ ! -e "$pkgdir/usr/bin/vivaldi-stable" ]]; then
		install -dm 755 "$pkgdir/usr/bin"
		ln -sf /opt/vivaldi/vivaldi "$pkgdir/usr/bin/vivaldi-stable"
	fi

	# install icons
	for res in 16 22 24 32 48 64 128 256; do
		install -Dm644 "${pkgdir}/opt/vivaldi/product_logo_${res}.png" \
		"${pkgdir}/usr/share/icons/hicolor/${res}x${res}/apps/vivaldi.png"
	done

	# license
	install -dm755 "$pkgdir/usr/share/licenses/$pkgname"
	strings "$pkgdir/opt/vivaldi/locales/en-US.pak" \
		| tr '\n' ' ' \
		| sed -rne 's/.*(<html lang.*>.*html>).*/\1/p' \
		| w3m -I 'utf-8' -T 'text/html' \
		> "$pkgdir/usr/share/licenses/$pkgname/eula.txt"

	# Install ffmpeg codec
	(cd "$srcdir/chromium-$_chromium" \
		&& install -Dm644 out/Release/libffmpeg.so "$pkgdir/opt/vivaldi/libffmpeg.so")

	# Extract and install widevine codec
	mkdir "${srcdir}/chrome" && cd "${srcdir}/chrome"
	bsdtar -xf ../chrome.rpm opt/google/chrome/libwidevinecdm.so

	# Copy to Vivaldi directory for now. We might add a symlink when package is installed (using alpm hook).
	unlink "${pkgdir}/opt/vivaldi/libwidevinecdm.so" || true
	cp opt/google/chrome/libwidevinecdm.so "${pkgdir}/opt/vivaldi"
	
	# Chrome license
	cp "${srcdir}/chrome-eula_text.html" "${pkgdir}/usr/share/licenses/${pkgname}"

	# ALPM Hooks
	mkdir -p "${pkgdir}/usr/share/libalpm"/{hooks,scripts}
	cp "${srcdir}"/../*.hook "${pkgdir}/usr/share/libalpm/hooks"
	install -Dm755 "${srcdir}"/../vivaldi-widevine-helper "${pkgdir}/usr/share/libalpm/scripts/vivaldi-widevine-helper"
}

